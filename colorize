#! /bin/bash

COLOR_NAME=$1
REGEXP_STR="$2"
COLOR_SUFFIX="\033[0m"

if [ "$COLOR_NAME" == "red" ]; then
    COLOR_PREFIX="\033[1;31m"
elif [ "$COLOR_NAME" == "green" ]; then
    COLOR_PREFIX="\033[1;32m"
elif [ "$COLOR_NAME" == "yellow" ]; then
    COLOR_PREFIX="\033[1;33m"
elif [ "$COLOR_NAME" == "blue" ]; then
    COLOR_PREFIX="\033[1;34m"
elif [ "$COLOR_NAME" == "purple" ]; then
    COLOR_PREFIX="\033[1;35m"
elif [ "$COLOR_NAME" == "cyan" ]; then
    COLOR_PREFIX="\033[1;36m"
elif [ "$COLOR_NAME" == "white" ]; then
    COLOR_PREFIX="\033[1;37m"
else
    echo "ERROR: unknown color name '$COLOR_NAME'" >&2
    help()
    exit
fi

awk -v color_prefix="$COLOR_PREFIX" -v color_suffix="$COLOR_SUFFIX" -v reg="$REGEXP_STR" '{
    if (match($0, reg)) {
        printf("%s", substr($0, 1, RSTART-1));
        printf("%s", color_prefix substr($0, RSTART, RLENGTH) color_suffix);
        printf("%s\n", substr($0, RSTART+RLENGTH, length()));
    } else {
        print;
    }

    fflush();
}'

function help() {
    cat <<EOF
Colorize first string matches pattern in a line. It's designed for better log display.

Usage: $0 color pattern

    color    Color name. Possible values are
             'red', 'green', 'yellow', 'blue', 'purple', 'cyan' and 'white'.
    pattern  A regular expression supported by awk.
EOF
}
